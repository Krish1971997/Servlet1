package com.zoho.BusBookingUsingExcel;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;

public class ReadExcelFileDemo {
	@SuppressWarnings("deprecation")
public static void main(String args[]) throws IOException {
    //obtaining input bytes from a file  
    FileInputStream fis = new FileInputStream(new File("C:\\Users\\Admin\\Documents\\BusbookingExcelsheet.xls"));
    //creating workbook instance that refers to .xls file  
    HSSFWorkbook wb = new HSSFWorkbook(fis);
    //creating a Sheet object to retrieve the object  
    HSSFSheet sheet = wb.getSheetAt(0);
    //evaluating cell type
   
    FormulaEvaluator formulaEvaluator = wb.getCreationHelper().createFormulaEvaluator();
    System.out.println("The given file is "+ wb);
    for (Row row: sheet)
    //iteration over row using for each loop  
  {
  
    	int n1ColIndex = 0;    // 0-based.    this is the index of row in excel.
    	int n2ColIndex = 1;    // 
    	int n3ColIndex = 2;
    	int n4ColIndex = 3;

    	// then you can read cell by Row.getCell() method.

    	// below code, you can put in loop.
    	XSSFCell n1Cell = row.getCell(n1ColIndex
    	
    	for (Cell cell: row) //iteration over cell using for each loop  
      {
        switch (formulaEvaluator.evaluateInCell(cell).getCellType()) {
        case Cell.CELL_TYPE_NUMERIC:
          //field that represents numeric cell type  
          //getting the value of the cell as a number  
          System.out.print(cell.getNumericCellValue() + "\t\t");
          break;
        case Cell.CELL_TYPE_STRING:
          //field that represents string cell type  
          //getting the value of the cell as a string  
          System.out.print(cell.getStringCellValue() + "\t\t");
          break;
        }
      }
      System.out.println();
    }
  }
}